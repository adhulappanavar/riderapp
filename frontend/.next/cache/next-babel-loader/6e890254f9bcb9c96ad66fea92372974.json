{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/anidhula/learn/strapi/strapi-deliveroo/frontend2/pages/riders.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query MyQuery {\\n      riders{\\n          name\\n      }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery, gql } from \"@apollo/client\";\nvar MyQuery = gql(_templateObject());\nexport var __N_SSG = true;\nexport default function Riders() {\n  _s();\n\n  var _useQuery = useQuery(MyQuery),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (loading) return __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }\n  }, \"loading...\");\n  console.log(data);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, JSON.stringify(data, null, 2)));\n}\n\n_s(Riders, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Riders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Riders\");","map":{"version":3,"sources":["/Users/anidhula/learn/strapi/strapi-deliveroo/frontend2/pages/riders.tsx"],"names":["useQuery","gql","MyQuery","Riders","data","loading","console","log","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAGA,IAAMC,OAAO,GAAGD,GAAH,mBAAb;;AAQA,eAAe,SAASE,MAAT,GAAkB;AAAA;;AAAA,kBACLH,QAAQ,CAACE,OAAD,CADH;AAAA,MACvBE,IADuB,aACvBA,IADuB;AAAA,MACjBC,OADiB,aACjBA,OADiB;;AAG/B,MAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEbC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMI,IAAI,CAACC,SAAL,CAAeL,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAN,CADF,CADF;AAKD;;GAXuBD,M;UACIH,Q;;;KADJG,M","sourcesContent":["import { useQuery, gql } from \"@apollo/client\";\nimport { initializeApollo } from \"src/apollo\";\n\nconst MyQuery = gql`\n  query MyQuery {\n      riders{\n          name\n      }\n  }\n`;\n\nexport default function Riders() {\n  const { data, loading } = useQuery(MyQuery);\n\n  if (loading) return <span>loading...</span>;\n\n  console.log(data);\n  return (\n    <div>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n}\n\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: MyQuery,\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n    },\n  };\n\n\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}