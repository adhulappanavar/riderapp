{"ast":null,"code":"var _jsxFileName = \"/Users/anidhula/learn/strapi/strapi-deliveroo/frontend2/pages/ridersgql.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery, gql } from \"@apollo/client\";\nimport { initializeApollo } from \"src/apollo\";\nconst MyRiderQuery = gql`\n  query MyQuery {\n    riders{\n          name\n      }\n  }\n`;\nexport default function Riders() {\n  const {\n    data,\n    loading\n  } = useQuery(MyRiderQuery);\n  if (loading) return __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }\n  }, \"loading...\"); // console.log(data);\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, JSON.stringify(data, null, 2)));\n}\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: MyRiderQuery\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    }\n  };\n}","map":{"version":3,"sources":["/Users/anidhula/learn/strapi/strapi-deliveroo/frontend2/pages/ridersgql.tsx"],"names":["useQuery","gql","initializeApollo","MyRiderQuery","Riders","data","loading","JSON","stringify","getStaticProps","apolloClient","query","props","initialApolloState","cache","extract"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,MAAMC,YAAY,GAAGF,GAAI;;;;;;CAAzB;AAQA,eAAe,SAASG,MAAT,GAAkB;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBN,QAAQ,CAACG,YAAD,CAAlC;AAEA,MAAIG,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP,CAHkB,CAK/B;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeH,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAN,CADF,CADF;AAKD;AAED,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMC,YAAY,GAAGR,gBAAgB,EAArC;AAEA,QAAMQ,YAAY,CAACC,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAER;AADgB,GAAnB,CAAN;AAIA,SAAO;AACLS,IAAAA,KAAK,EAAE;AACLC,MAAAA,kBAAkB,EAAEH,YAAY,CAACI,KAAb,CAAmBC,OAAnB;AADf;AADF,GAAP;AAKD","sourcesContent":["import { useQuery, gql } from \"@apollo/client\";\nimport { initializeApollo } from \"src/apollo\";\n\nconst MyRiderQuery = gql`\n  query MyQuery {\n    riders{\n          name\n      }\n  }\n`;\n\nexport default function Riders() {\n  const { data, loading } = useQuery(MyRiderQuery);\n\n  if (loading) return <span>loading...</span>;\n\n  // console.log(data);\n  return (\n    <div>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n}\n\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: MyRiderQuery,\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n    },\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}